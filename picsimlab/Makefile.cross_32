CXX=i686-w64-mingw32-g++
AR=i686-w64-mingw32-ar

CPPFLAGS= -g -O2 -I. -I.. -I../cmd.src -I../sim.src -I../gui.src 

s51_OBJECTS_SHARED :=$(shell cd ..; $(MAKE) -f s51.src/Makefile  -f picsimlab/print.mak print-OBJECTS_SHARED)
stm8_OBJECTS_SHARED:=$(shell cd ..; $(MAKE) -f stm8.src/Makefile -f picsimlab/print.mak print-OBJECTS_SHARED)
z80_OBJECTS_SHARED :=$(shell cd ..; $(MAKE) -f z80.src/Makefile  -f picsimlab/print.mak print-OBJECTS_SHARED)


LIBS = ../libcmd.a  ../libguitool.a ../libguiucsim.a  ../libsim.a  ../libucsimutil.a  
LIBS+= ../s51.src/libs51.a  ../stm8.src/libstm8.a ../z80.src/libz80.a


all: s51 z80 stm8
	-rm -f libucsim.a
	$(AR) cqT libucsim.a $(LIBS) 
	printf 'create libucsim.a\naddlib libucsim.a\nsave\nend\n' > /tmp/arfile
	$(AR) -M  </tmp/arfile
	#gcc -shared -Wl,--whole-archive libucsim.a -o libucsim.so
	mv libucsim.a libucsim.aw32
	$(CXX) $(CPPFLAGS) s51_alone.cc libucsim.aw32 -o s51_alone.exe -lws2_32
		

s51: ucsimlib.o s51_lib.o
	cd ../s51.src; $(AR) rcsv libs51.a ${s51_OBJECTS_SHARED} ../picsimlab/ucsimlib.o ../picsimlab/s51_lib.o

stm8: sstm8_lib.o
	cd ../stm8.src; $(AR) rcsv libstm8.a ${stm8_OBJECTS_SHARED} ../picsimlab/sstm8_lib.o

z80: sz80_lib.o
	cd ../z80.src; $(AR) rcsv libz80.a ${z80_OBJECTS_SHARED}  ../picsimlab/sz80_lib.o

clean:
	rm -rf *.o libucsim.a s51_alone libucsim.o
